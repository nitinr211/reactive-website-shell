{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\wamp46\\\\www\\\\reactive-website-builder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDatabases, setShowDatabases] = useState(false);\n  const [showFileLoader, setShowFileLoader] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n  const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n  const [iframeSrc, setIframeSrc] = useState('http://localhost:3000/output.html');\n  useEffect(() => {\n    // Load external script\n    const loadScript = () => {\n      const script = document.createElement('script');\n      script.src = '/add.js'; // Replace with the actual path to add.js\n      script.type = 'text/javascript';\n      script.async = true;\n      script.onload = () => console.log('add.js script loaded successfully');\n      document.body.appendChild(script);\n    };\n    loadScript();\n    let clickCount = 0;\n    let clickTimer = null;\n    const handleTripleClick = async () => {\n      clickCount++;\n      if (clickCount === 3) {\n        clickCount = 0; // Reset the click count\n        clearTimeout(clickTimer); // Clear the timer\n\n        try {\n          const response = await axios.get('http://localhost:5000/check-selected');\n          const newShowTextList = response.data.showTextList === 1;\n          setShowTextList(newShowTextList); // Update state with response\n          console.log(`showTextList is now: ${newShowTextList}`);\n        } catch (error) {\n          console.error('Error fetching selected status:', error);\n        }\n      } else {\n        // Reset the click count after a short delay\n        clearTimeout(clickTimer);\n        clickTimer = setTimeout(() => {\n          clickCount = 0;\n        }, 500); // 500ms delay between clicks\n      }\n    };\n\n    const handleMessage = event => {\n      if (event.data.type === 'TRIPLE_CLICK') {\n        try {\n          console.log('fuuuu');\n          const response = axios.get('http://localhost:5000/check-selected');\n          const newShowTextList = response.data.showTextList === 1;\n          setShowTextList(newShowTextList); // Update state with response\n          console.log(`showTextList is now: ${newShowTextList}`);\n        } catch (error) {\n          console.error('Error fetching selected status:', error);\n        }\n      }\n      document.addEventListener('click', handleTripleClick);\n      return () => {\n        document.removeEventListener('click', handleTripleClick);\n        window.removeEventListener('message', handleMessage);\n        clearTimeout(clickTimer);\n      };\n    };\n  }, []);\n\n  // Handlers to show specific components\n  const handleShowDatabases = () => {\n    setShowDatabases(true);\n    setShowFileLoader(false);\n    setShowMetrics(false);\n  };\n  const handleShowFileLoader = () => {\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  const handleShowMetrics = () => {\n    setShowDatabases(false);\n    setShowFileLoader(false);\n    setShowMetrics(true);\n  };\n  const handleShowCRM = () => {\n    // Set iframeSrc to localhost:8080 when CRM is selected\n    setIframeSrc('http://localhost:8080');\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainMenu, {\n      onShowDatabases: handleShowDatabases,\n      onShowFileLoader: handleShowFileLoader,\n      onShowMetrics: handleShowMetrics,\n      onShowCRM: handleShowCRM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [showDatabases && /*#__PURE__*/_jsxDEV(Databases, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 35\n      }, this), showMetrics && /*#__PURE__*/_jsxDEV(Metrics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }, this), showFileLoader && /*#__PURE__*/_jsxDEV(FileLoader, {\n        setIframeSrc: setIframeSrc,\n        iframeSrc: iframeSrc,\n        onSetShowTextList: setShowTextList // Directly set state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this), showTextList && /*#__PURE__*/_jsxDEV(TextList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"S65Dl3apsJd8HhRV+G4FqMlwo7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MainMenu","Databases","FileLoader","Metrics","TextList","BuilderTable","axios","jsxDEV","_jsxDEV","App","_s","showDatabases","setShowDatabases","showFileLoader","setShowFileLoader","showMetrics","setShowMetrics","showTextList","setShowTextList","iframeSrc","setIframeSrc","loadScript","script","document","createElement","src","type","async","onload","console","log","body","appendChild","clickCount","clickTimer","handleTripleClick","clearTimeout","response","get","newShowTextList","data","error","setTimeout","handleMessage","event","addEventListener","removeEventListener","window","handleShowDatabases","handleShowFileLoader","handleShowMetrics","handleShowCRM","children","onShowDatabases","onShowFileLoader","onShowMetrics","onShowCRM","fileName","_jsxFileName","lineNumber","columnNumber","className","onSetShowTextList","_c","$RefreshReg$"],"sources":["C:/wamp64/wamp46/www/reactive-website-builder/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\nimport axios from 'axios';\n\n\nfunction App() {\n    const [showDatabases, setShowDatabases] = useState(false);\n    const [showFileLoader, setShowFileLoader] = useState(false);\n    const [showMetrics, setShowMetrics] = useState(false);\n    const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n    const [iframeSrc, setIframeSrc] = useState('http://localhost:3000/output.html');\n\n    useEffect(() => {\n        // Load external script\n        const loadScript = () => {\n            const script = document.createElement('script');\n            script.src = '/add.js'; // Replace with the actual path to add.js\n            script.type = 'text/javascript';\n            script.async = true;\n            script.onload = () => console.log('add.js script loaded successfully');\n            document.body.appendChild(script);\n        };\n\n        loadScript();\n        let clickCount = 0;\n        let clickTimer = null;\n\n        const handleTripleClick = async () => {\n            clickCount++;\n           \n            if (clickCount === 3) {\n                clickCount = 0; // Reset the click count\n                clearTimeout(clickTimer); // Clear the timer\n                \n                try {\n                    const response = await axios.get('http://localhost:5000/check-selected');\n                    const newShowTextList = response.data.showTextList === 1;\n                    setShowTextList(newShowTextList); // Update state with response\n                    console.log(`showTextList is now: ${newShowTextList}`);\n                } catch (error) {\n                    console.error('Error fetching selected status:', error);\n                }\n            } else {\n                // Reset the click count after a short delay\n                clearTimeout(clickTimer);\n                clickTimer = setTimeout(() => {\n                    clickCount = 0;\n                }, 500); // 500ms delay between clicks\n            }\n        \n        };\n\n\n        const handleMessage = (event) => {\n            if (event.data.type === 'TRIPLE_CLICK') { try {\n                console.log('fuuuu');\n                const response = axios.get('http://localhost:5000/check-selected');\n                const newShowTextList = response.data.showTextList === 1;\n                setShowTextList(newShowTextList); // Update state with response\n                console.log(`showTextList is now: ${newShowTextList}`);\n            } catch (error) {\n                console.error('Error fetching selected status:', error);\n            }}\n        \n       \n\n\n        document.addEventListener('click', handleTripleClick);\n\n        return () => {\n            document.removeEventListener('click', handleTripleClick);\n            window.removeEventListener('message', handleMessage);\n            clearTimeout(clickTimer);\n        };\n    }\n    }, []);\n\n    // Handlers to show specific components\n    const handleShowDatabases = () => {\n        setShowDatabases(true);\n        setShowFileLoader(false);\n        setShowMetrics(false);\n    };\n\n    const handleShowFileLoader = () => {\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n\n    const handleShowMetrics = () => {\n        setShowDatabases(false);\n        setShowFileLoader(false);\n        setShowMetrics(true);\n    };\n\n    const handleShowCRM = () => {\n        // Set iframeSrc to localhost:8080 when CRM is selected\n        setIframeSrc('http://localhost:8080');\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n\n    return (\n        <div>\n            <MainMenu\n                onShowDatabases={handleShowDatabases}\n                onShowFileLoader={handleShowFileLoader}\n                onShowMetrics={handleShowMetrics}\n                onShowCRM={handleShowCRM}\n            />\n            <div className=\"app-container\">\n                {showDatabases && <Databases />}\n                {showMetrics && <Metrics />}\n                {showFileLoader && (\n                    <FileLoader\n                        setIframeSrc={setIframeSrc}\n                        iframeSrc={iframeSrc}\n                        onSetShowTextList={setShowTextList} // Directly set state\n                    />\n                )}\n                {showTextList && <TextList />} \n              \n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}