{"ast":null,"code":"import _slicedToArray from\"C:/wamp64/wamp46/www/reactive-website-builder/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import React, { useState } from 'react';\n// import CustomMenu from './CustomMenu';\n// const SideNav = () => {\n//   const [isOpen, setIsOpen] = useState(false);\n//   const openNav = () => {\n//     setIsOpen(true);\n//   };\n//   const closeNav = () => {\n//     setIsOpen(false);\n//   };\n//   // Define customMenu object here\n//   const customMenu = {\n//     links: [\n//       { label: 'Save/Load', index: 0 },\n//       { label: 'Components', index: 1 },\n//       { label: 'Assets', index: 2 },\n//       { label: 'Add/Remove Databases', index: 3 },\n//       { label: 'Graphics/Animations', index: 4 },\n//       { label: 'Analytics', index: 5 },\n//       { label: 'Sign Out', index: 6 },\n//     ],\n//     items: [\n//       // Menu configurations for Save/Load\n//       [\n//         { type: 'slider', label: 'Volume', min: 0, max: 100, defaultValue: 50 },\n//         { type: 'input', label: 'Username', placeholder: 'Enter your usernameeee' },\n//       ],\n//       // Menu configurations for Components\n//       [\n//         { type: 'slider', label: 'Brightness', min: 0, max: 100, defaultValue: 75 },\n//         { type: 'input', label: 'Email', placeholder: 'Enter your email' },\n//       ],\n//       // Menu configurations for Assets\n//       [\n//         { type: 'slider', label: 'Contrast', min: 0, max: 100, defaultValue: 25 },\n//         { type: 'input', label: 'Password', placeholder: 'Enter your password' },\n//       ],\n//       // Additional configurations can be added here\n//     ],\n//   };\n//   return (\n//     <>\n//       <span style={{ fontSize: 30, cursor: 'pointer' }} onClick={openNav}>\n//         &#9776; \n//       </span>\n//       <CustomMenu customMenu={customMenu} isOpen={isOpen} closeNav={closeNav} />\n//       <style>\n//         {`\n//           body {\n//             font-family: \"Lato\", sans-serif;\n//           }\n//           .sidenav {\n//             height: 100%;\n//             width: 0;\n//             position: fixed;\n//             z-index: 1;\n//             top: 0;\n//             left: 0;\n//             background-color: #111;\n//             overflow-x: hidden;\n//             transition: 0.5s;\n//             padding-top: 60px;\n//             text-align: center;\n//           }\n//           .sidenav.open {\n//             width: 20%;\n//           }\n//           .sidenav a {\n//             padding: 8px 8px 8px 32px;\n//             text-decoration: none;\n//             font-size: 25px;\n//             color: #818181;\n//             display: block;\n//             transition: 0.3s;\n//           }\n//           .sidenav a:hover {\n//             color: #f1f1f1;\n//           }\n//           .sidenav .closebtn {\n//             position: absolute;\n//             top: 0;\n//             right: 25px;\n//             font-size: 36px;\n//             margin-left: 50px;\n//           }\n//           @media screen and (max-height: 450px) {\n//             .sidenav {\n//               padding-top: 15px;\n//             }\n//             .sidenav a {\n//               font-size: 18px;\n//             }\n//           }\n//         `}\n//       </style>\n//     </>\n//   );\n// };\n// export default SideNav;\nimport React,{useState}from'react';import CustomMenu from'./CustomMenu';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SideNav=function SideNav(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isOpen=_useState2[0],setIsOpen=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),menuIndex=_useState4[0],setMenuIndex=_useState4[1];// State to track the current menu\nvar openNav=function openNav(){setIsOpen(true);};var closeNav=function closeNav(){setIsOpen(false);};// Define two customMenu objects\nvar customMenus=[{links:[{label:'Save/Load',index:0},{label:'Components',index:1},{label:'Assets',index:2},{label:'Add/Remove Databases',index:3},{label:'Graphics/Animations',index:4},{label:'Analytics',index:5},{label:'Sign Out',index:6}],items:[[{type:'slider',label:'Volume',min:0,max:100,defaultValue:50},{type:'input',label:'Username',placeholder:'Enter your username'}],[{type:'slider',label:'Brightness',min:0,max:100,defaultValue:75},{type:'input',label:'Email',placeholder:'Enter your email'}],[{type:'slider',label:'Contrast',min:0,max:100,defaultValue:25},{type:'input',label:'Password',placeholder:'Enter your password'}]]},{links:[{label:'Settings',index:0},{label:'Profile',index:1},{label:'Help',index:2},{label:'Feedback',index:3}],items:[[{type:'slider',label:'Notification Volume',min:0,max:100,defaultValue:70},{type:'input',label:'User Role',placeholder:'Enter your role'}],[{type:'input',label:'New Password',placeholder:'Enter new password'},{type:'input',label:'Confirm Password',placeholder:'Confirm new password'}]]}];// Function to change menu\nvar changeMenu=function changeMenu(index){setMenuIndex(index);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{style:{fontSize:30,cursor:'pointer'},onClick:openNav,children:\"\\u2630\"}),/*#__PURE__*/_jsx(CustomMenu,{customMenu:customMenus[menuIndex],isOpen:isOpen,closeNav:closeNav,changeMenu:changeMenu// Pass the function to change menus\n}),/*#__PURE__*/_jsx(\"style\",{children:\"\\n          body {\\n            font-family: \\\"Lato\\\", sans-serif;\\n          }\\n\\n          .sidenav {\\n            height: 100%;\\n            width: 0;\\n            position: fixed;\\n            z-index: 1;\\n            top: 0;\\n            left: 0;\\n            background-color: #111;\\n            overflow-x: hidden;\\n            transition: 0.5s;\\n            padding-top: 60px;\\n            text-align: center;\\n          }\\n\\n          .sidenav.open {\\n            width: 20%;\\n          }\\n\\n          .sidenav a {\\n            padding: 8px 8px 8px 32px;\\n            text-decoration: none;\\n            font-size: 25px;\\n            color: #818181;\\n            display: block;\\n            transition: 0.3s;\\n          }\\n\\n          .sidenav a:hover {\\n            color: #f1f1f1;\\n          }\\n\\n          .sidenav .closebtn {\\n            position: absolute;\\n            top: 0;\\n            right: 25px;\\n            font-size: 36px;\\n            margin-left: 50px;\\n          }\\n\\n          @media screen and (max-height: 450px) {\\n            .sidenav {\\n              padding-top: 15px;\\n            }\\n\\n            .sidenav a {\\n              font-size: 18px;\\n            }\\n          }\\n        \"})]});};export default SideNav;","map":{"version":3,"names":["React","useState","CustomMenu","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SideNav","_useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","_useState4","menuIndex","setMenuIndex","openNav","closeNav","customMenus","links","label","index","items","type","min","max","defaultValue","placeholder","changeMenu","children","style","fontSize","cursor","onClick","customMenu"],"sources":["C:/wamp64/wamp46/www/reactive-website-builder/src/menu/SideNav.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import CustomMenu from './CustomMenu';\r\n\r\n// const SideNav = () => {\r\n//   const [isOpen, setIsOpen] = useState(false);\r\n\r\n//   const openNav = () => {\r\n//     setIsOpen(true);\r\n//   };\r\n\r\n//   const closeNav = () => {\r\n//     setIsOpen(false);\r\n//   };\r\n\r\n//   // Define customMenu object here\r\n//   const customMenu = {\r\n//     links: [\r\n//       { label: 'Save/Load', index: 0 },\r\n//       { label: 'Components', index: 1 },\r\n//       { label: 'Assets', index: 2 },\r\n//       { label: 'Add/Remove Databases', index: 3 },\r\n//       { label: 'Graphics/Animations', index: 4 },\r\n//       { label: 'Analytics', index: 5 },\r\n//       { label: 'Sign Out', index: 6 },\r\n//     ],\r\n//     items: [\r\n//       // Menu configurations for Save/Load\r\n//       [\r\n//         { type: 'slider', label: 'Volume', min: 0, max: 100, defaultValue: 50 },\r\n//         { type: 'input', label: 'Username', placeholder: 'Enter your usernameeee' },\r\n//       ],\r\n//       // Menu configurations for Components\r\n//       [\r\n//         { type: 'slider', label: 'Brightness', min: 0, max: 100, defaultValue: 75 },\r\n//         { type: 'input', label: 'Email', placeholder: 'Enter your email' },\r\n//       ],\r\n//       // Menu configurations for Assets\r\n//       [\r\n//         { type: 'slider', label: 'Contrast', min: 0, max: 100, defaultValue: 25 },\r\n//         { type: 'input', label: 'Password', placeholder: 'Enter your password' },\r\n//       ],\r\n//       // Additional configurations can be added here\r\n//     ],\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <span style={{ fontSize: 30, cursor: 'pointer' }} onClick={openNav}>\r\n//         &#9776; \r\n//       </span>\r\n//       <CustomMenu customMenu={customMenu} isOpen={isOpen} closeNav={closeNav} />\r\n//       <style>\r\n//         {`\r\n//           body {\r\n//             font-family: \"Lato\", sans-serif;\r\n//           }\r\n\r\n//           .sidenav {\r\n//             height: 100%;\r\n//             width: 0;\r\n//             position: fixed;\r\n//             z-index: 1;\r\n//             top: 0;\r\n//             left: 0;\r\n//             background-color: #111;\r\n//             overflow-x: hidden;\r\n//             transition: 0.5s;\r\n//             padding-top: 60px;\r\n//             text-align: center;\r\n//           }\r\n\r\n//           .sidenav.open {\r\n//             width: 20%;\r\n//           }\r\n\r\n//           .sidenav a {\r\n//             padding: 8px 8px 8px 32px;\r\n//             text-decoration: none;\r\n//             font-size: 25px;\r\n//             color: #818181;\r\n//             display: block;\r\n//             transition: 0.3s;\r\n//           }\r\n\r\n//           .sidenav a:hover {\r\n//             color: #f1f1f1;\r\n//           }\r\n\r\n//           .sidenav .closebtn {\r\n//             position: absolute;\r\n//             top: 0;\r\n//             right: 25px;\r\n//             font-size: 36px;\r\n//             margin-left: 50px;\r\n//           }\r\n\r\n//           @media screen and (max-height: 450px) {\r\n//             .sidenav {\r\n//               padding-top: 15px;\r\n//             }\r\n\r\n//             .sidenav a {\r\n//               font-size: 18px;\r\n//             }\r\n//           }\r\n//         `}\r\n//       </style>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default SideNav;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport CustomMenu from './CustomMenu';\r\n\r\nconst SideNav = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [menuIndex, setMenuIndex] = useState(0); // State to track the current menu\r\n\r\n  const openNav = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeNav = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  // Define two customMenu objects\r\n  const customMenus = [\r\n    {\r\n      links: [\r\n        { label: 'Save/Load', index: 0 },\r\n        { label: 'Components', index: 1 },\r\n        { label: 'Assets', index: 2 },\r\n        { label: 'Add/Remove Databases', index: 3 },\r\n        { label: 'Graphics/Animations', index: 4 },\r\n        { label: 'Analytics', index: 5 },\r\n        { label: 'Sign Out', index: 6 },\r\n      ],\r\n      items: [\r\n        [\r\n          { type: 'slider', label: 'Volume', min: 0, max: 100, defaultValue: 50 },\r\n          { type: 'input', label: 'Username', placeholder: 'Enter your username' },\r\n        ],\r\n        [\r\n          { type: 'slider', label: 'Brightness', min: 0, max: 100, defaultValue: 75 },\r\n          { type: 'input', label: 'Email', placeholder: 'Enter your email' },\r\n        ],\r\n        [\r\n          { type: 'slider', label: 'Contrast', min: 0, max: 100, defaultValue: 25 },\r\n          { type: 'input', label: 'Password', placeholder: 'Enter your password' },\r\n        ],\r\n      ],\r\n    },\r\n    {\r\n      links: [\r\n        { label: 'Settings', index: 0 },\r\n        { label: 'Profile', index: 1 },\r\n        { label: 'Help', index: 2 },\r\n        { label: 'Feedback', index: 3 },\r\n      ],\r\n      items: [\r\n        [\r\n          { type: 'slider', label: 'Notification Volume', min: 0, max: 100, defaultValue: 70 },\r\n          { type: 'input', label: 'User Role', placeholder: 'Enter your role' },\r\n        ],\r\n        [\r\n          { type: 'input', label: 'New Password', placeholder: 'Enter new password' },\r\n          { type: 'input', label: 'Confirm Password', placeholder: 'Confirm new password' },\r\n        ],\r\n      ],\r\n    },\r\n  ];\r\n\r\n  // Function to change menu\r\n  const changeMenu = (index) => {\r\n    setMenuIndex(index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span style={{ fontSize: 30, cursor: 'pointer' }} onClick={openNav}>\r\n        &#9776; \r\n      </span>\r\n      <CustomMenu\r\n        customMenu={customMenus[menuIndex]}\r\n        isOpen={isOpen}\r\n        closeNav={closeNav}\r\n        changeMenu={changeMenu} // Pass the function to change menus\r\n      />\r\n      <style>\r\n        {`\r\n          body {\r\n            font-family: \"Lato\", sans-serif;\r\n          }\r\n\r\n          .sidenav {\r\n            height: 100%;\r\n            width: 0;\r\n            position: fixed;\r\n            z-index: 1;\r\n            top: 0;\r\n            left: 0;\r\n            background-color: #111;\r\n            overflow-x: hidden;\r\n            transition: 0.5s;\r\n            padding-top: 60px;\r\n            text-align: center;\r\n          }\r\n\r\n          .sidenav.open {\r\n            width: 20%;\r\n          }\r\n\r\n          .sidenav a {\r\n            padding: 8px 8px 8px 32px;\r\n            text-decoration: none;\r\n            font-size: 25px;\r\n            color: #818181;\r\n            display: block;\r\n            transition: 0.3s;\r\n          }\r\n\r\n          .sidenav a:hover {\r\n            color: #f1f1f1;\r\n          }\r\n\r\n          .sidenav .closebtn {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 25px;\r\n            font-size: 36px;\r\n            margin-left: 50px;\r\n          }\r\n\r\n          @media screen and (max-height: 450px) {\r\n            .sidenav {\r\n              padding-top: 15px;\r\n            }\r\n\r\n            .sidenav a {\r\n              font-size: 18px;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SideNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}