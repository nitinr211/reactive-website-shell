{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFillSize;\nvar _domUtils = require(\"./dom-utils\");\nfunction _sliceIterator(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _slicedToArray(arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    return _sliceIterator(arr, i);\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n}\n\n// Determine the font-size to set on the element `el` that will\n// allow the first child of that element to fill the maximum height\n// and width without causing overflow\nfunction getFillSize(el, minFontSize, maxFontSize) {\n  var widthOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var factor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  // Make an initial guess at font-size that fits width\n  var fontSize = Math.min(Math.max(Math.min(Number(el.offsetWidth) / (factor * 10), maxFontSize), minFontSize));\n  var step = 1;\n  var complete;\n  while (!complete) {\n    el.style.fontSize = \"\".concat(fontSize, \"px\");\n    var _getOverflow = (0, _domUtils.getOverflow)(el),\n      _getOverflow2 = _slicedToArray(_getOverflow, 2),\n      overflowWidth = _getOverflow2[0],\n      overflowHeight = _getOverflow2[1];\n    if (!widthOnly && (overflowHeight || overflowWidth)) {\n      if (fontSize <= minFontSize) {\n        fontSize = minFontSize;\n        complete = true;\n      } else {\n        fontSize -= step;\n        complete = true;\n      }\n    } else if (widthOnly && overflowWidth) {\n      fontSize -= step;\n      complete = true;\n    } else if (fontSize >= maxFontSize) {\n      fontSize = maxFontSize;\n      complete = true;\n    } else if (!complete) {\n      fontSize += step;\n    }\n  }\n  return fontSize;\n}\n/* eslint-enable no-param-reassign */","map":{"version":3,"names":["Object","defineProperty","exports","value","default","getFillSize","_domUtils","require","_sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","length","err","_slicedToArray","Array","isArray","TypeError","el","minFontSize","maxFontSize","widthOnly","arguments","factor","fontSize","Math","min","max","Number","offsetWidth","step","complete","style","concat","_getOverflow","getOverflow","_getOverflow2","overflowWidth","overflowHeight"],"sources":["C:/Users/super/source/repos/CREATIVE TOOLS/reactive-website-builder/node_modules/react-scale-text/lib/get-fillsize.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getFillSize;\n\nvar _domUtils = require(\"./dom-utils\");\n\nfunction _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\n// Determine the font-size to set on the element `el` that will\n// allow the first child of that element to fill the maximum height\n// and width without causing overflow\nfunction getFillSize(el, minFontSize, maxFontSize) {\n  var widthOnly = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var factor = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  // Make an initial guess at font-size that fits width\n  var fontSize = Math.min(Math.max(Math.min(Number(el.offsetWidth) / (factor * 10), maxFontSize), minFontSize));\n  var step = 1;\n  var complete;\n\n  while (!complete) {\n    el.style.fontSize = \"\".concat(fontSize, \"px\");\n\n    var _getOverflow = (0, _domUtils.getOverflow)(el),\n        _getOverflow2 = _slicedToArray(_getOverflow, 2),\n        overflowWidth = _getOverflow2[0],\n        overflowHeight = _getOverflow2[1];\n\n    if (!widthOnly && (overflowHeight || overflowWidth)) {\n      if (fontSize <= minFontSize) {\n        fontSize = minFontSize;\n        complete = true;\n      } else {\n        fontSize -= step;\n        complete = true;\n      }\n    } else if (widthOnly && overflowWidth) {\n      fontSize -= step;\n      complete = true;\n    } else if (fontSize >= maxFontSize) {\n      fontSize = maxFontSize;\n      complete = true;\n    } else if (!complete) {\n      fontSize += step;\n    }\n  }\n\n  return fontSize;\n}\n/* eslint-enable no-param-reassign */"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}