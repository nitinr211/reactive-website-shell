{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\wamp46\\\\www\\\\reactive-website-builder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDatabases, setShowDatabases] = useState(false);\n  const [showFileLoader, setShowFileLoader] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n  const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n  const [iframeSrc, setIframeSrc] = useState('http://localhost:3000/output.html');\n  useEffect(() => {\n    const handleMessage = event => {\n      console.log('Message received in parent app:', event);\n      if (event.data && event.data.dataArId) {\n        console.log('Received dataArId from iframe:', event.data.dataArId);\n        // removeElementFromServer(event.data.dataArId); // Directly call the server removal function\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n  // Callback to update showTextList in App\n  const handleSetShowTextList = value => {\n    setShowTextList(value);\n  };\n\n  // Handlers to show specific components\n  const handleShowDatabases = () => {\n    setShowDatabases(true);\n    setShowFileLoader(false);\n    setShowMetrics(false);\n  };\n  const handleShowFileLoader = () => {\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  const handleShowMetrics = () => {\n    setShowDatabases(false);\n    setShowFileLoader(false);\n    setShowMetrics(true);\n  };\n  const handleShowCRM = () => {\n    // Set iframeSrc to localhost:8080 when CRM is selected\n    setIframeSrc('http://localhost:8080');\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainMenu, {\n      onShowDatabases: handleShowDatabases,\n      onShowFileLoader: handleShowFileLoader,\n      onShowMetrics: handleShowMetrics,\n      onShowCRM: handleShowCRM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [showDatabases && /*#__PURE__*/_jsxDEV(Databases, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 35\n      }, this), showMetrics && /*#__PURE__*/_jsxDEV(Metrics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }, this), showFileLoader && /*#__PURE__*/_jsxDEV(FileLoader, {\n        setIframeSrc: setIframeSrc,\n        iframeSrc: iframeSrc,\n        onSetShowTextList: handleSetShowTextList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"S65Dl3apsJd8HhRV+G4FqMlwo7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MainMenu","Databases","FileLoader","Metrics","TextList","BuilderTable","jsxDEV","_jsxDEV","App","_s","showDatabases","setShowDatabases","showFileLoader","setShowFileLoader","showMetrics","setShowMetrics","showTextList","setShowTextList","iframeSrc","setIframeSrc","handleMessage","event","console","log","data","dataArId","window","addEventListener","removeEventListener","handleSetShowTextList","value","handleShowDatabases","handleShowFileLoader","handleShowMetrics","handleShowCRM","children","onShowDatabases","onShowFileLoader","onShowMetrics","onShowCRM","fileName","_jsxFileName","lineNumber","columnNumber","className","onSetShowTextList","_c","$RefreshReg$"],"sources":["C:/wamp64/wamp46/www/reactive-website-builder/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\n\nfunction App() {\n    const [showDatabases, setShowDatabases] = useState(false);\n    const [showFileLoader, setShowFileLoader] = useState(false);\n    const [showMetrics, setShowMetrics] = useState(false);\n    const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n    const [iframeSrc, setIframeSrc] = useState('http://localhost:3000/output.html');\n\n    useEffect(() => {\n        const handleMessage = (event) => {\n            console.log('Message received in parent app:', event);\n            if (event.data && event.data.dataArId) {\n                console.log('Received dataArId from iframe:', event.data.dataArId);\n               // removeElementFromServer(event.data.dataArId); // Directly call the server removal function\n            }\n        };\n    \n        window.addEventListener('message', handleMessage);\n    \n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n    // Callback to update showTextList in App\n    const handleSetShowTextList = (value) => {\n        setShowTextList(value);\n    };\n\n    // Handlers to show specific components\n    const handleShowDatabases = () => {\n        setShowDatabases(true);\n        setShowFileLoader(false);\n        setShowMetrics(false);\n    };\n\n    const handleShowFileLoader = () => {\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n\n    const handleShowMetrics = () => {\n        setShowDatabases(false);\n        setShowFileLoader(false);\n        setShowMetrics(true);\n    };\n\n    const handleShowCRM = () => {\n        // Set iframeSrc to localhost:8080 when CRM is selected\n        setIframeSrc('http://localhost:8080');\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n      \n\n    return (\n        <div>\n            <MainMenu\n                onShowDatabases={handleShowDatabases}\n                onShowFileLoader={handleShowFileLoader}\n                onShowMetrics={handleShowMetrics}\n                onShowCRM={handleShowCRM} \n            />\n            <div className=\"app-container\">\n                {showDatabases && <Databases />}\n                {showMetrics && <Metrics />}\n                {showFileLoader && (\n                    <FileLoader\n                        setIframeSrc={setIframeSrc}\n                        iframeSrc={iframeSrc}\n                        onSetShowTextList={handleSetShowTextList} \n                    />\n                )}\n                {/* {showTextList && <TextList />}  */}\n               \n                \n            </div>\n           \n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}