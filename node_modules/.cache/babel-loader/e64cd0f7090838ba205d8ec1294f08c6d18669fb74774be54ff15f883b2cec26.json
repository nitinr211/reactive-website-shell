{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\wamp46\\\\www\\\\reactive-website-builder\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showDatabases, setShowDatabases] = useState(false);\n  const [showFileLoader, setShowFileLoader] = useState(false);\n  const [showMetrics, setShowMetrics] = useState(false);\n  const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n  const [iframeSrc, setIframeSrc] = useState('../architect/public/storage/projects/1/Zz8G26FrLCkn5AcbeMpYrjuJWnygYleADwc1/output.html');\n  useEffect(() => {\n    // Load external script\n    const loadScript = () => {\n      const script = document.createElement('script');\n      script.src = '/add.js'; // Replace with the actual path to add.js\n      script.type = 'text/javascript';\n      script.async = true;\n      script.onload = () => console.log('add.js script loaded successfully');\n      document.body.appendChild(script);\n    };\n    loadScript();\n\n    // Listen for messages from iframe\n    const handleMessage = async event => {\n      console.log('Message received in parent app:', event);\n\n      // Check if the message contains the `dataArId`\n      if (event.data && event.data.dataArId) {\n        const dataArId = event.data.dataArId;\n        console.log('Received dataArId from iframe:', dataArId);\n        try {\n          // Call the `/remove-element` API\n          const response = await axios.post('http://localhost:5000/remove-element', {\n            id: dataArId // Pass the `dataArId` as the request payload\n          });\n\n          // Handle response from the server\n          if (response.data && response.data.showTextList !== undefined) {\n            console.log(response.data.message); // Log the success message\n            setShowTextList(response.data.showTextList); // Update state if needed\n          }\n        } catch (error) {\n          console.error('Error removing element on server:', error);\n        }\n      }\n    };\n    window.addEventListener('message', handleMessage);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n  useEffect(() => {\n    let clickCount = 0;\n    let clickTimer = null;\n    const handleTripleClick = async () => {\n      clickCount++;\n      if (clickCount === 3) {\n        clickCount = 0; // Reset the click count\n        clearTimeout(clickTimer); // Clear the timer\n\n        try {\n          const response = await axios.get('http://localhost:5000/check-selected');\n          const newShowTextList = response.data.showTextList === 1;\n          setShowTextList(newShowTextList); // Update state with response\n          console.log(`showTextList is now: ${newShowTextList}`);\n        } catch (error) {\n          console.error('Error fetching selected status:', error);\n        }\n      } else {\n        // Reset the click count after a short delay\n        clearTimeout(clickTimer);\n        clickTimer = setTimeout(() => {\n          clickCount = 0;\n        }, 500); // 500ms delay between clicks\n      }\n    };\n\n    document.addEventListener('click', handleTripleClick);\n    return () => {\n      document.removeEventListener('click', handleTripleClick);\n      clearTimeout(clickTimer);\n    };\n  }, []);\n\n  // Handlers to show specific components\n  const handleShowDatabases = () => {\n    setShowDatabases(true);\n    setShowFileLoader(false);\n    setShowMetrics(false);\n  };\n  const handleShowFileLoader = () => {\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  const handleShowMetrics = () => {\n    setShowDatabases(false);\n    setShowFileLoader(false);\n    setShowMetrics(true);\n  };\n  const handleShowCRM = () => {\n    // Set iframeSrc to localhost:8080 when CRM is selected\n    setIframeSrc('http://localhost:8080');\n    setShowDatabases(false);\n    setShowFileLoader(true);\n    setShowMetrics(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MainMenu, {\n      onShowDatabases: handleShowDatabases,\n      onShowFileLoader: handleShowFileLoader,\n      onShowMetrics: handleShowMetrics,\n      onShowCRM: handleShowCRM\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [showDatabases && /*#__PURE__*/_jsxDEV(Databases, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 35\n      }, this), showMetrics && /*#__PURE__*/_jsxDEV(Metrics, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }, this), showFileLoader && /*#__PURE__*/_jsxDEV(FileLoader, {\n        setIframeSrc: setIframeSrc,\n        iframeSrc: iframeSrc,\n        onSetShowTextList: setShowTextList // Directly set state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this), showTextList && /*#__PURE__*/_jsxDEV(TextList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"RQAnMhMjOskyyXex8PjXmeMt0Rc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MainMenu","Databases","FileLoader","Metrics","TextList","BuilderTable","axios","jsxDEV","_jsxDEV","App","_s","showDatabases","setShowDatabases","showFileLoader","setShowFileLoader","showMetrics","setShowMetrics","showTextList","setShowTextList","iframeSrc","setIframeSrc","loadScript","script","document","createElement","src","type","async","onload","console","log","body","appendChild","handleMessage","event","data","dataArId","response","post","id","undefined","message","error","window","addEventListener","removeEventListener","clickCount","clickTimer","handleTripleClick","clearTimeout","get","newShowTextList","setTimeout","handleShowDatabases","handleShowFileLoader","handleShowMetrics","handleShowCRM","children","onShowDatabases","onShowFileLoader","onShowMetrics","onShowCRM","fileName","_jsxFileName","lineNumber","columnNumber","className","onSetShowTextList","_c","$RefreshReg$"],"sources":["C:/wamp64/wamp46/www/reactive-website-builder/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport MainMenu from './menu/MainMenu';\nimport Databases from './databases/Databases';\nimport FileLoader from './menu/FileLoader';\nimport Metrics from './metrics/Metrics';\nimport TextList from './builder/TextList';\nimport BuilderTable from './BuilderTable';\nimport axios from 'axios';\n\n\nfunction App() {\n    const [showDatabases, setShowDatabases] = useState(false);\n    const [showFileLoader, setShowFileLoader] = useState(false);\n    const [showMetrics, setShowMetrics] = useState(false);\n    const [showTextList, setShowTextList] = useState(false); // State for TextList visibility\n    const [iframeSrc, setIframeSrc] = useState('../architect/public/storage/projects/1/Zz8G26FrLCkn5AcbeMpYrjuJWnygYleADwc1/output.html');\n\n    useEffect(() => {\n        // Load external script\n        const loadScript = () => {\n            const script = document.createElement('script');\n            script.src = '/add.js'; // Replace with the actual path to add.js\n            script.type = 'text/javascript';\n            script.async = true;\n            script.onload = () => console.log('add.js script loaded successfully');\n            document.body.appendChild(script);\n        };\n\n        loadScript();\n\n        // Listen for messages from iframe\n        const handleMessage = async (event) => {\n            console.log('Message received in parent app:', event);\n        \n            // Check if the message contains the `dataArId`\n            if (event.data && event.data.dataArId) {\n                const dataArId = event.data.dataArId;\n                console.log('Received dataArId from iframe:', dataArId);\n        \n                try {\n                    // Call the `/remove-element` API\n                    const response = await axios.post('http://localhost:5000/remove-element', {\n                        id: dataArId, // Pass the `dataArId` as the request payload\n                    });\n        \n                    // Handle response from the server\n                    if (response.data && response.data.showTextList !== undefined) {\n                        console.log(response.data.message); // Log the success message\n                        setShowTextList(response.data.showTextList); // Update state if needed\n                    }\n                } catch (error) {\n                    console.error('Error removing element on server:', error);\n                }\n            }\n        };\n        \n\n        window.addEventListener('message', handleMessage);\n\n        // Cleanup on unmount\n        return () => {\n            window.removeEventListener('message', handleMessage);\n        };\n    }, []);\n\n\n    \n    useEffect(() => {\n        let clickCount = 0;\n        let clickTimer = null;\n\n        const handleTripleClick = async () => {\n            clickCount++;\n            if (clickCount === 3) {\n                clickCount = 0; // Reset the click count\n                clearTimeout(clickTimer); // Clear the timer\n                \n                try {\n                    const response = await axios.get('http://localhost:5000/check-selected');\n                    const newShowTextList = response.data.showTextList === 1;\n                    setShowTextList(newShowTextList); // Update state with response\n                    console.log(`showTextList is now: ${newShowTextList}`);\n                } catch (error) {\n                    console.error('Error fetching selected status:', error);\n                }\n            } else {\n                // Reset the click count after a short delay\n                clearTimeout(clickTimer);\n                clickTimer = setTimeout(() => {\n                    clickCount = 0;\n                }, 500); // 500ms delay between clicks\n            }\n        };\n\n        document.addEventListener('click', handleTripleClick);\n\n        return () => {\n            document.removeEventListener('click', handleTripleClick);\n            clearTimeout(clickTimer);\n        };\n    }, []);\n\n    // Handlers to show specific components\n    const handleShowDatabases = () => {\n        setShowDatabases(true);\n        setShowFileLoader(false);\n        setShowMetrics(false);\n    };\n\n    const handleShowFileLoader = () => {\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n\n    const handleShowMetrics = () => {\n        setShowDatabases(false);\n        setShowFileLoader(false);\n        setShowMetrics(true);\n    };\n\n    const handleShowCRM = () => {\n        // Set iframeSrc to localhost:8080 when CRM is selected\n        setIframeSrc('http://localhost:8080');\n        setShowDatabases(false);\n        setShowFileLoader(true);\n        setShowMetrics(false);\n    };\n\n    return (\n        <div>\n            <MainMenu\n                onShowDatabases={handleShowDatabases}\n                onShowFileLoader={handleShowFileLoader}\n                onShowMetrics={handleShowMetrics}\n                onShowCRM={handleShowCRM}\n            />\n            <div className=\"app-container\">\n                {showDatabases && <Databases />}\n                {showMetrics && <Metrics />}\n                {showFileLoader && (\n                    <FileLoader\n                        setIframeSrc={setIframeSrc}\n                        iframeSrc={iframeSrc}\n                        onSetShowTextList={setShowTextList} // Directly set state\n                    />\n                )}\n                {showTextList && <TextList />} \n              \n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}