{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = getStyle;\nexports.getOverflow = getOverflow;\nexports.hasOverflow = exports.css = exports.camelize = exports.uniqId = void 0;\n\n/**\n * @file utils.js\n * @description DOM utility functions\n */\n// Simple way to generate a unique id\nvar id = 0;\nvar uniqId = function uniqId() {\n  return \"uid-\".concat(Date.now(), \"-\").concat(id++);\n}; // Camelcase a dashed string, ie do-thing => doThing\n\nexports.uniqId = uniqId;\nvar camelize = function camelize(str) {\n  return str.replace(/-(\\w)/g, function (s, letter) {\n    return letter.toUpperCase();\n  });\n};\n/* eslint-disable no-param-reassign, guard-for-in, no-restricted-syntax */\n// Set multiple css properties on an element `el` by\n// passing in a `style` object that defines what properties\n// to set and their value\n\nexports.camelize = camelize;\nvar css = function css(el, styles) {\n  for (var property in styles) {\n    el.style[property] = styles[property];\n  }\n};\n/* eslint-enable no-param-reassign, guard-for-in, no-restricted-syntax */\n// Get the current style property value for the given element\n\nexports.css = css;\nfunction getStyle(el, styleProp) {\n  if (el.currentStyle) {\n    return el.currentStyle[camelize(styleProp)];\n  } else if (document.defaultView && document.defaultView.getComputedStyle) {\n    return document.defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n  }\n  return el.style[camelize(styleProp)];\n}\nfunction getOverflow(el) {\n  return [el.clientWidth < el.scrollWidth, el.clientHeight < el.scrollHeight];\n}\nvar hasOverflow = function hasOverflow(el) {\n  return getOverflow(el).some(function (v) {\n    return v === true;\n  });\n};\nexports.hasOverflow = hasOverflow;","map":{"version":3,"names":["Object","defineProperty","exports","value","getStyle","getOverflow","hasOverflow","css","camelize","uniqId","id","concat","Date","now","str","replace","s","letter","toUpperCase","el","styles","property","style","styleProp","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","clientWidth","scrollWidth","clientHeight","scrollHeight","some","v"],"sources":["C:/Users/super/source/repos/FLURRY/reactive-website-builder/node_modules/react-scale-text/lib/dom-utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = getStyle;\nexports.getOverflow = getOverflow;\nexports.hasOverflow = exports.css = exports.camelize = exports.uniqId = void 0;\n\n/**\n * @file utils.js\n * @description DOM utility functions\n */\n// Simple way to generate a unique id\nvar id = 0;\n\nvar uniqId = function uniqId() {\n  return \"uid-\".concat(Date.now(), \"-\").concat(id++);\n}; // Camelcase a dashed string, ie do-thing => doThing\n\n\nexports.uniqId = uniqId;\n\nvar camelize = function camelize(str) {\n  return str.replace(/-(\\w)/g, function (s, letter) {\n    return letter.toUpperCase();\n  });\n};\n/* eslint-disable no-param-reassign, guard-for-in, no-restricted-syntax */\n// Set multiple css properties on an element `el` by\n// passing in a `style` object that defines what properties\n// to set and their value\n\n\nexports.camelize = camelize;\n\nvar css = function css(el, styles) {\n  for (var property in styles) {\n    el.style[property] = styles[property];\n  }\n};\n/* eslint-enable no-param-reassign, guard-for-in, no-restricted-syntax */\n// Get the current style property value for the given element\n\n\nexports.css = css;\n\nfunction getStyle(el, styleProp) {\n  if (el.currentStyle) {\n    return el.currentStyle[camelize(styleProp)];\n  } else if (document.defaultView && document.defaultView.getComputedStyle) {\n    return document.defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n  }\n\n  return el.style[camelize(styleProp)];\n}\n\nfunction getOverflow(el) {\n  return [el.clientWidth < el.scrollWidth, el.clientHeight < el.scrollHeight];\n}\n\nvar hasOverflow = function hasOverflow(el) {\n  return getOverflow(el).some(function (v) {\n    return v === true;\n  });\n};\n\nexports.hasOverflow = hasOverflow;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,QAAQ,GAAGA,QAAQ;AAC3BF,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjCH,OAAO,CAACI,WAAW,GAAGJ,OAAO,CAACK,GAAG,GAAGL,OAAO,CAACM,QAAQ,GAAGN,OAAO,CAACO,MAAM,GAAG,KAAK,CAAC;;AAE9E;AACA;AACA;AACA;AACA;AACA,IAAIC,EAAE,GAAG,CAAC;AAEV,IAAID,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;EAC7B,OAAO,MAAM,CAACE,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAACD,EAAE,EAAE,CAAC;AACpD,CAAC,CAAC,CAAC;;AAGHR,OAAO,CAACO,MAAM,GAAGA,MAAM;AAEvB,IAAID,QAAQ,GAAG,SAASA,QAAQA,CAACM,GAAG,EAAE;EACpC,OAAOA,GAAG,CAACC,OAAO,CAAC,QAAQ,EAAE,UAAUC,CAAC,EAAEC,MAAM,EAAE;IAChD,OAAOA,MAAM,CAACC,WAAW,CAAC,CAAC;EAC7B,CAAC,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;;AAGAhB,OAAO,CAACM,QAAQ,GAAGA,QAAQ;AAE3B,IAAID,GAAG,GAAG,SAASA,GAAGA,CAACY,EAAE,EAAEC,MAAM,EAAE;EACjC,KAAK,IAAIC,QAAQ,IAAID,MAAM,EAAE;IAC3BD,EAAE,CAACG,KAAK,CAACD,QAAQ,CAAC,GAAGD,MAAM,CAACC,QAAQ,CAAC;EACvC;AACF,CAAC;AACD;AACA;;AAGAnB,OAAO,CAACK,GAAG,GAAGA,GAAG;AAEjB,SAASH,QAAQA,CAACe,EAAE,EAAEI,SAAS,EAAE;EAC/B,IAAIJ,EAAE,CAACK,YAAY,EAAE;IACnB,OAAOL,EAAE,CAACK,YAAY,CAAChB,QAAQ,CAACe,SAAS,CAAC,CAAC;EAC7C,CAAC,MAAM,IAAIE,QAAQ,CAACC,WAAW,IAAID,QAAQ,CAACC,WAAW,CAACC,gBAAgB,EAAE;IACxE,OAAOF,QAAQ,CAACC,WAAW,CAACC,gBAAgB,CAACR,EAAE,EAAE,IAAI,CAAC,CAACS,gBAAgB,CAACL,SAAS,CAAC;EACpF;EAEA,OAAOJ,EAAE,CAACG,KAAK,CAACd,QAAQ,CAACe,SAAS,CAAC,CAAC;AACtC;AAEA,SAASlB,WAAWA,CAACc,EAAE,EAAE;EACvB,OAAO,CAACA,EAAE,CAACU,WAAW,GAAGV,EAAE,CAACW,WAAW,EAAEX,EAAE,CAACY,YAAY,GAAGZ,EAAE,CAACa,YAAY,CAAC;AAC7E;AAEA,IAAI1B,WAAW,GAAG,SAASA,WAAWA,CAACa,EAAE,EAAE;EACzC,OAAOd,WAAW,CAACc,EAAE,CAAC,CAACc,IAAI,CAAC,UAAUC,CAAC,EAAE;IACvC,OAAOA,CAAC,KAAK,IAAI;EACnB,CAAC,CAAC;AACJ,CAAC;AAEDhC,OAAO,CAACI,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}